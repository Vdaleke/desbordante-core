name: CMake
on:
  pull_request:
    types: [opened, synchronize, reopened]
    #paths-ignore:
      #- docs/**
      #- README.md
      #- README_PYPI.md
      #- cli/**
      #- images/**
      #- .gitignore
      #- COPYING
      #- pyproject.toml
      #- examples/**
  push:
    branches:
      - main
    #paths-ignore:
      #- docs/**
      #- README.md
      #- README_PYPI.md
      #- cli/**
      #- images/**
      #- .gitignore
      #- COPYING
      #- pyproject.toml
      #- examples/**
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  # Cancel in-progress runs when a new workflow with the same group name is triggered
  cancel-in-progress: true
jobs:
  run_tests:
    name: Run tests on ${{ matrix.system.os }} with ${{ matrix.system.toolset }}, (${{ matrix.cfg.BUILD_TYPE }}, ${{ matrix.cfg.SANITIZER }})
    continue-on-error: true
    strategy:
      matrix:
        system:
          - { os: ubuntu-latest, 
              toolset: gcc, 
              env: CXX=g++-10 }
          - { os: ubuntu-latest, 
              toolset: llvm-clang, 
              env: CXX=clang++-17 CXXFLAGS="-stdlib=libc++" LDFLAGS="-lc++abi" }
          - { os: macos-latest, 
              toolset: apple-clang, 
              env: CXX=clang++ BOOST_ROOT=$(brew --prefix boost) }
          - { os: windows-latest, 
              toolset: gcc, 
              env: CXX=g++ }
        cfg:
          - { BUILD_TYPE: Release }
          - { BUILD_TYPE: Debug }
          - { BUILD_TYPE: Debug, SANITIZER : ADDRESS }
          - { BUILD_TYPE: Debug, SANITIZER : UB }

    runs-on: ${{ matrix.system.os }}

    defaults:
      run:
         shell: ${{ matrix.system.os  == 'windows-latest' && 'msys2 {0}' || 'bash' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/composite-actions/install-dependencies
        with:
          os: ${{ matrix.system.os }}
          toolset: ${{ matrix.system.toolset }}
      - name: Download datasets
        uses: ./.github/composite-actions/download-datasets
      - name: Build
        run: |
          export ${{ matrix.system.env }}

          if [[ "${{ matrix.cfg.BUILD_TYPE }}" == "Debug" ]]; then
            ./build.sh --debug --sanitizer=${{ matrix.cfg.SANITIZER }}
          else
            ./build.sh
          fi
      - name: Test
        working-directory: ${{ github.workspace }}/build/target
        run: |
          if [[ ${{ matrix.system.os }} == 'macos-latest' ]]; then
            export DYLD_LIBRARY_PATH=/usr/local/lib:${DYLD_LIBRARY_PATH}
          fi

          ./Desbordante_test --gtest_filter='*:-*HeavyDatasets*'
